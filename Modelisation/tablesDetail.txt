1. Contacts(*contact_id, email, society, first_name, last_name, gender, birthdate, tel, address, postal_code)
------------------------------------------------------------------

2. Skills(*skill_id, skill_name, skill_type)
skill_type : Langues, Job, Instrument, MusicStyle
Contrainte : anglais ne peut être qu'avec skillType=Langue, saxophone avec skillType=Instrument, etc.
Contrainte : quelqu'un ayant un skill_type = Instrument ou MusicStyle doit forcement avoir un skill_name = Musicien dans la table
------------------------------------------------------------------

3. KnownSkills(*contact_id, *skill_id)
------------------------------------------------------------------

4. Trainings(*#contact_id, *training_name,training_center, postal_code, training_start, training_end, diploma)
------------------------------------------------------------------

5. Creations(*creation_id, creation_name, creation_type, release_date, profits, last_update_profits)
Quand le projet termine, ajoute la projet a la table : alert
CreationType : album, song, play, movie, TV show, concert
------------------------------------------------------------------

6. Involvments(*#contact_id, *#creation_id, #skill_id, description)
An artist can be both a writer and a comedian for instance
Role : writer, producer, singer, musician, comedian, metteur en scene...
------------------------------------------------------------------

7. Requests(*request_id, #creation_id(createur), description, budget, status, request_start, request_end)
------------------------------------------------------------------

8. Proposals(*#request_id, *#contact_id(artist), *#agent_id, status, proposed_date)
Status : pending, accepted, rejected
Quand Status=accpeted, on met a jour Demandes[Status]
Contrainte : DemandStart=<DateProposed<=DemandEnd
------------------------------------------------------------------

9. RequiredSkills(*#request_id, *#skill_id)
Contrainte : la skill ne peut pas être de type "professional" (car cela apparait déjà dans le champs RoleSearched de la demande)
------------------------------------------------------------------

10. AgencyContracts(*#contact_id, *start_date, end_date, fee)
DateEnd : NULL pour un contrat à durée indeterminée qui est toujours en cours
------------------------------------------------------------------

11. Agents(*agent_id, email, first_name, last_name, gender, birthdate, tel, address, postal_code)
------------------------------------------------------------------

12. AgentRecords(*#contact_id(artist), *#agent_id, *start_date, end_date)
------------------------------------------------------------------

13. ProducerContracts(*#request_id, *#contact_id(artist), *#agent_id, *prod_contract_id, start_date, end_date, salary, installments_number, amendment, incentive(%))
Lors de la creation d'un contratpro , on insert directement une ou plusieurs lignes de paiement dans la compta.
Si un contrat pro necessite 10 paiements , on a 10 lignes dans la compta en status TODO
------------------------------------------------------------------

14. PaymentRecords(*#request_id, *#contact_id(artist), *#agent_id, *prod_contract_id, *payment_id, amount, status, date, agency_fee, artist_salary, is_incentive)
TRIGGER : AFTER insert/update 
calcul automatique de la comission+ remunerationArtiste , en fonction de Amount et du  PercentageTaken du ContratContactAgency 

Gestion : 
Detection des contrats ToDo ayant une date de paiement passée
Calcul benecice de l'agence sur les contrats , il est facile de calculer mensuellement
Si on a les salaires des agents dans la table agent, on peut calculer le benefice total de l'agence
------------------------------------------------------------------
